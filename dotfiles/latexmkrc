$pdf_mode = 1;
$postscript_mode = $dvi_mode = 0;

$pdflatex = 'pdflatex -8bit -etex -file-line-error -halt-on-error -synctex=1 %O %S';
$recorder = 1;

$pdf_previewer = 'open %S';
$pdf_update_method = 0;
# $biber = 'biber --debug %O %S';
$bibtex_use = 2; # treat .bbl as compile result
$clean_ext = "synctex.gz run.xml %R-blx.bib";

@default_files = ('main.tex');

add_cus_dep( 'graffle', 'pdf', 0, 'graffle2pdf' );
sub graffle2pdf {
   system("graffle2pdf $_[0].graffle $_[0].pdf");
}

add_cus_dep( 'svg', 'pdf', 0, 'svg2pdf' );
sub svg2pdf {
   system("svg2pdf $_[0].svg $_[0].pdf");
}

add_cus_dep( 'markdown', 'tex', 0, 'kramdown' );
sub kramdown {
   system("kramdown -o latex $_[0].markdown > $_[0].tex");
}

# http://tex.stackexchange.com/questions/1226/how-to-make-latexmk-use-makeglossaries
add_cus_dep('glo', 'gls', 0, 'run_makeglossaries');
add_cus_dep('acn', 'acr', 0, 'run_makeglossaries');
push @generated_exts, 'glo', 'gls', 'glg';
push @generated_exts, 'acn', 'acr', 'alg';
$clean_ext .= ' %R.ist %R.xdy';

sub run_makeglossaries {
  if ( $silent ) {
      system "makeglossaries -q '$_[0]'";
    }
  else {
      system "makeglossaries '$_[0]'";
    };
}
# vim: ft=perl
