# -*- mode: gitconfig; indent-tabs-mode: nil; -*-

[user]
    name  = Damien Pollet
    email = damien.pollet@gmail.com

[alias]
    root      = rev-parse --show-toplevel
    l         = log --graph --pretty=tformat:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an %cr)%Creset'
    l1        = !git l -1
    lu        = !git l @{u}
    li        = !git l ..@{u}
    lo        = !git l @{u}..
    ls        = ls-files
    dst       = !"f () { git diff $* | diffstat; }; f"
    staged    = diff --staged
    wdiff     = diff --word-diff=color
    st        = status --short --branch
    ci        = commit
    co        = checkout
    ri        = rebase --interactive
    pl        = !"f () { git l1 && git pull $*; }; f"
    fixup     = !sh -c 'git commit --fixup=$1' -
    squash    = !sh -c 'git commit --squash=$1' -
    tags      = show-ref --tags
    branches  = branch --all --verbose --verbose
    remotes   = !"f () { local n; if [[ $1 = '-n' ]]; then n=$1; shift; fi; git remote show $n ${*:-`git remote | paste -sd ' ' -`}; }; f"
    trim-merged = !"f() { git branch --merged ${1:-HEAD} | grep -v '*' | xargs -n1 git branch -d; }; f"
    subup     = !"f () { git submodule sync && git submodule update --init --recursive; }; f"
    svnci     = !"f () { git svn rebase && git svn dcommit; }; f"
    svnup     = svn rebase
    svnups    = !"f () { git stash && git svnup && git stash apply; }; f"
    tgz       = !"f () { git archive --format=tar --prefix=${1:-HEAD}/ ${2:-HEAD} | gzip > ${1:-HEAD}.tar.gz; }; f"
    ignore    = !"f () { local ignore_file=$( git rev-parse --show-cdup ).gitignore arg; for arg in $*; do echo $arg >> $ignore_file; done; sort -u -o $ignore_file $ignore_file; }; f"
    unignore  = !"f () { sed -i .bak \"/^${1}\\$/d\" .gitignore; }; f"
    exclude   = !"f () { for each; do echo \"${each}\" >> $(git rev-parse --git-dir)/info/exclude; done; }; f"
    unexclude = !"f () { sed -i .bak \"/^${1}\\$/d\" $(git rev-parse --git-dir)/info/exclude; }; f"
    assume    = update-index --assume-unchanged
    unassume  = update-index --no-assume-unchanged
    assumed   = "!git ls-files -v | grep ^h | cut -c 3-"
    show-staged = !git show ":0:$1"
    show-merge-ancestor = !git show ":1:$1"
    show-merge-target = !git show ":2:$1"
    show-merge-source = !git show ":3:$1"

[core]
    excludesfile = ~/.gitignore
    pager = cat

[credential]
    helper = osxkeychain

[ghi]
    token = !security find-internet-password -a cdlm -s github.com -l 'ghi token' -w

[include]
    path = ~/.gitconfig.private  # tokens etc

[push]
    default = current

[fetch]
    recurseSubmodules = on-demand

[status]
    submoduleSummary = true

[diff]
    renames             = true
    tool                = opendiff
    algorithm           = patience
    mnemonicPrefix      = true
    compactionHeuristic = true

[merge]
    conflictStyle = diff3

[rebase]
    autosquash = true
    autostash = true

[pager]
    log  = diff-so-fancy
    show = diff-so-fancy
    diff = diff-so-fancy #diff-highlight

[color]
    ui    = auto
    pager = true

[color "branch"]
    current = green reverse
    local   = green
    remote  = red bold

[color "diff"]
    meta = cyan
    frag = blue
    old  = red
    new  = green

[color "status"]
    added     = green
    changed   = yellow
    untracked = magenta
    header    = white

[color "decorate"]
    HEAD         = green
    branch       = cyan
    tag          = blue
    remoteBranch = red

# https://github.com/alebedev/git-media
[filter "media"]
    required = true
    clean    = git media clean %f
    smudge   = git media smudge %f
[filter "hawser"]
    required = true
    clean    = git hawser clean %f
    smudge   = git hawser smudge %f

# Pharo merge driver for FileTree
[merge "mcVersion"]
    name = GitFileTree MergeDriver for Monticello
    driver = git-filetree-mergedriver --version %O %A %B
[merge "mcMethodProperties"]
    name = GitFileTree MergeDriver for Monticello
    driver = git-filetree-mergedriver --methodProperties %O %A %B
[merge "mcProperties"]
    name = GitFileTree MergeDriver for Monticello
    driver = git-filetree-mergedriver --properties %O %A %B
