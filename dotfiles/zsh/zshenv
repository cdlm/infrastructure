typeset -U path fpath manpath
export -TU INFOPATH infopath
export -TU CLASSPATH classpath

path=(/usr/local/bin $path)

# homebrew
local bp='/opt/homebrew' #`brew --prefix`
if [ -d $bp ]; then
   path=(
      $bp/sbin
      $bp/bin
      $path)
    manpath=($bp/share/man ${manpath:-''}) # empty string required to inherit global paths
fi

# byobu screen/tmux wrapper
if command which -s byobu; then
    export BYOBU_PREFIX="$bp"
fi

# standalone texlive, selected from ~/.texliveVersion
function texlive_set_paths() {
    local texliveVersion texlivePrefix texliveBin
    texliveVersion=${1:-$(< ~/.texliveVersion)} 2>/dev/null
    for dir in {/opt,/usr/local}/texlive; do
        if [ -d "$dir" ]; then
            texlivePrefix="${dir}/${texliveVersion:-2013}"
            break
        fi
    done
    [ -d "$texlivePrefix" ] || return
    texliveBin="${texlivePrefix}/bin/x86_64-darwin"
    [ -d "$texliveBin" ] || texliveBin="${texlivePrefix}/bin/universal-darwin"
    [ -d "$texliveBin" ] || return

    path+="$texliveBin"
    infopath+="$texlivePrefix/texmf-dist/doc/info"
    manpath+="$texlivePrefix/texmf-dist/doc/man"
}
texlive_set_paths

# haskell cabal
local hs="$HOME/.cabal"
if [ -d $hs ]; then
    path=($hs/bin $path)
    manpath=($hs/share/man $manpath)
fi
unset hs

# Ocaml, fully installed via opam
which -p opam >/dev/null \
    && [ -f "$HOME/.opam/opam-init/init.zsh" ] \
    && . "$HOME/.opam/opam-init/init.zsh"

# Ruby with either rbenv or rvm
if command which -s rbenv; then
    eval "$(rbenv init -)"
elif [[ -s "$HOME/.rvm/scripts/rvm" ]]; then # fallback on rvm
    . "$HOME/.rvm/scripts/rvm"
    __rvm_project_rvmrc
fi

# Python with pyenv
if command which -s pyenv; then
    eval "$(pyenv init -)"
fi

# user-specific tools
path=($HOME/bin $path)

