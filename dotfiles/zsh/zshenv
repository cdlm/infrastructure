typeset -U path fpath manpath
export -TU INFOPATH infopath
export -TU CLASSPATH classpath

path=(/usr/local/bin $path)

# homebrew
local bp='/opt/homebrew' #`brew --prefix`
if [ -d $bp ]; then
   path=(
      $bp/sbin
      $bp/bin
      $bp/share/python3
      $bp/share/python
      $path)
fi

# standalone texlive, selected from ~/.texliveVersion
function texlive_set_paths() {
    local texliveVersion texlivePrefix
    texliveVersion=${1:-$(< ~/.texliveVersion)} 2>/dev/null
    for dir in {/opt,/usr/local}/texlive; do
        if [ -d "$dir" ]; then
            texlivePrefix="${dir}/${texliveVersion:-2010}"
            break
        fi
    done
    [ -d "$texlivePrefix" ] || return

    path+="$texlivePrefix/bin/universal-darwin"
    infopath+="$texlivePrefix/texmf/doc/info"
    manpath+="$texlivePrefix/texmf/doc/man"
}
texlive_set_paths

# haskell cabal
local hs="$HOME/.cabal"
if [ -d $hs ]; then
    path=($hs/bin $path)
    manpath=($hs/share/man $manpath)
fi
unset hs

# ocaml opam; might need to run opam init
which -p opam >/dev/null && [ -d ~/.opam ] && eval `opam config -env`

# Ruby with either rbenv or rvm
if command which -s rbenv; then
    eval "$(rbenv init -)"
elif [[ -s "$HOME/.rvm/scripts/rvm" ]]; then # fallback on rvm
    . "$HOME/.rvm/scripts/rvm"
    __rvm_project_rvmrc
fi

# user-specific tools
path=($HOME/bin $path)

