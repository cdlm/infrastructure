#!/usr/bin/env ruby
require 'uri'

class HudsonProject
  attr_reader :name
  
  def initialize name, artifact, files
    @name, @artifact, @files = name, artifact, files
  end
  
  def job_url
    "https://pharo-ic.lille.inria.fr/hudson/job/#{URI.escape @name}"
  end
  
  def files_for_url
    all = @files.collect do |type, filename|
      case type
      when :zip
        URI.escape(filename) + '.zip'
      when :image
        "#{URI.escape @artifact}/#{URI.escape(filename)}.{image,changes}'"
      end
    end
  end
  
  def download_urls
    files_for_url.collect do |each|
      "#{job_url}/lastSuccessfulBuild/artifact/#{each}"
    end
  end
  
  def download(as_name = nil)
    download_urls.each do |url|
      system 'curl',
        '--remote-name', # same file name
        '--insecure', # SSL is a hassle
        '--continue-at', '-', # reuse already-downloaded file
        '--fail',
        '--progress-bar',
        url
      raise "Download failed: #{url}" unless $?.success?
    end
    @files.each do |type, filename|
      if type = :zip
        system 'unzip', '-j',
          filename,
          "#{@artifact}/#{@artifact}.image",
          "#{@artifact}/#{@artifact}.changes"
        # File.rm "#{filename}.zip"
      end
    end
    unless as_name.nil?
      File.rename "#{@artifact}.image", "#{as_name}.image"
      File.rename "#{@artifact}.changes", "#{as_name}.changes"
    end
  end
end


if __FILE__ == $PROGRAM_NAME

  PROJECTS = {}
  (1..3).each do |i| 
    PROJECTS["1#{i}"] = HudsonProject.new("Pharo 1.#{i}", "Pharo-1.#{i}", :zip => "Pharo-1.#{i}")
    PROJECTS["core1#{i}"] = HudsonProject.new("Pharo Core 1.#{i}", "PharoCore-1.#{i}", :zip => "PharoCore-1.#{i}")
  end
  PROJECTS.default = PROJECTS['12']

  def usage
    puts <<-EOS
#{File.basename $PROGRAM_NAME} [project] [name]
Downloads latest successful build of project from Hudson and optionally renames it.

Known projects:
EOS
    PROJECTS.each do |k,p|  puts "#{k}\t#{p.name}: #{p.job_url}"  end
    exit
  end
  
  usage if /-(h|-?help)/ =~ ARGV.first
  PROJECTS[ARGV[0]].download(ARGV[1])
end
