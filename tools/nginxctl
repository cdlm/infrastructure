#!/bin/sh

# TODO: maybe add option for launching a local server on :8080 or so
# TODO: add option for generating launchd plist

NGINX_BASE_DIR=`brew --prefix`
NGINX="${NGINX_BASE_DIR}/sbin/nginx"
NGINX_CONF="${NGINX_BASE_DIR}/etc/nginx/nginx.conf"
LAUNCHD_JOB="/Library/LaunchDaemons/homebrew.nginx.plist"
LAUNCHCTL=/bin/launchctl
SUDO=/usr/bin/sudo


### internal functions

__show_usage() {
    echo "Usage: ${0} {start|stop|restart|reload|validate|plist}" >&2
    exit 3
}

__be_root() {
    if [ $UID != 0 ]; then
        echo "Getting administrator privileges..." >&2
        exec ${SUDO} ${@}
    fi
}

__nginx_signal() {
    ${NGINX} -s ${1} &>/dev/null
}

__checkconfig() {
    __validate &>/dev/null
}


### subcommand functions

__start() {
    [ -r ${NGINX_CONF} ] || exit 1
    __checkconfig  && ${LAUNCHCTL} load -w ${LAUNCHD_JOB} || return ${?}
}

__stop() {
    ${LAUNCHCTL} unload -w ${LAUNCHD_JOB}
}

__restart() {
    __stop && __start
}

__reload() {
    __validate && __nginx_signal reload || return ${?}
}

__validate() {
    ${NGINX} -c ${NGINX_CONF} -t
}


### main

case "${1}" in
    start|stop|restart|reload|validate)
        __be_root ${0} ${@}
        [ -x ${NGINX} ] || exit 2
        __${1}
        ;;
    plist)
        cat <<EOF >&2
This sets the options below, which might clash with those in nginx.conf:
    user _www;
    daemon off;
plist goes to $LAUNCHD_JOB
EOF
        cat <<EOF | plutil -convert xml1 -o - -
{
  "WorkingDirectory" : "\/opt\/homebrew",
  "ProgramArguments" : [
    "\/opt\/homebrew\/sbin\/nginx",
    "-g", "user _www; daemon off;"
  ],
  "LaunchOnlyOnce" : false,
  "UserName" : "root",
  "RunAtLoad" : true,
  "KeepAlive" : true,
  "Label" : "homebrew.mxcl.nginx"
}
EOF
        ;;
    *)
        __show_usage
        ;;
esac
