#!/bin/bash

BASE="/Library/Application Support/TextMate/Bundles"

function git_updateOrClone() {
    name=$1
    bundle="${BASE}/${name}.tmbundle"
    repo=$2 #"git://github.com/textmate/${name}.tmbundle.git"
    echo -n "${name}   "
    if [ -d "${bundle}" ]; then
        cd "${bundle}"
        git pull
    else
        cd "$BASE"
        git clone ${repo} "${bundle}"
    fi
}

function reload() {
    if (killall -s TextMate > /dev/null); then # only reload if TM is running
        echo 'Reloading bundles'
        osascript -e 'tell application "TextMate" to reload bundles'
    fi
}

BUNDLES="
git=git://github.com/jcf/git-tmbundle.git
smalltalk=git://github.com/AntonyBlakey/smalltalk.tmbundle.git
cweb=git://github.com/michaelmelanson/cweb-tmbundle.git
sass=git://github.com/aussiegeek/ruby-sass-tmbundle.git
clojure=git://github.com/nullstyle/clojure-tmbundle.git
ada
apache
bison
bundle-development
c
cmake
context-free
css
ctags
cvs
diff
doxygen
dylan
eiffel
erlang
f-script
filemerge
getbundle
gettext
graphviz
haskell
hotkey
html
hyperlink-helper
icalendar
imagebrowser
ini
io
iterm
java
javadoc
javascript
json
latex
lex-flex
lighttpd
lisp
logo
lua
macports
mail
make
man-pages
markdown
math
mercurial
modula
navigation
objective-c
ocaml
odcompletion
outlines
perl
postscript
prolog
property-list
python
regularexpressions
restructuredtext
ruby
ruby-haml
s5
scheme
scons
setext
shellscript
slate
source
sql
ssh-config
standard-ml
subversion
tabular
tcl
terminalmate
text
textile
textmate
xml
yaml
"

for b in $BUNDLES; do
    bundle=${b%%=*}
    repo=${b#*=}
    if [[ $repo == $bundle ]]; then # default repo = textmate @ github
        repo="git://github.com/textmate/${bundle}.tmbundle.git"
    fi
    git_updateOrClone $bundle $repo
done
reload